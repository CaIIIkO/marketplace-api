// Code generated by MockGen. DO NOT EDIT.
// Source: internal/advertisement/handler.go
//
// Generated by this command:
//
//	mockgen -source=internal/advertisement/handler.go -destination=internal/advertisement/mock/mock_service_interface.go -package=mockad
//

// Package mockad is a generated GoMock package.
package mockad

import (
	context "context"
	advertisement "marketplace-api/internal/advertisement"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockServiceInterface is a mock of ServiceInterface interface.
type MockServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInterfaceMockRecorder
}

// MockServiceInterfaceMockRecorder is the mock recorder for MockServiceInterface.
type MockServiceInterfaceMockRecorder struct {
	mock *MockServiceInterface
}

// NewMockServiceInterface creates a new mock instance.
func NewMockServiceInterface(ctrl *gomock.Controller) *MockServiceInterface {
	mock := &MockServiceInterface{ctrl: ctrl}
	mock.recorder = &MockServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceInterface) EXPECT() *MockServiceInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockServiceInterface) Create(ctx context.Context, input *advertisement.CreateAdvertisementInput) (*advertisement.Advertisement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, input)
	ret0, _ := ret[0].(*advertisement.Advertisement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockServiceInterfaceMockRecorder) Create(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServiceInterface)(nil).Create), ctx, input)
}

// ListAd mocks base method.
func (m *MockServiceInterface) ListAd(ctx context.Context, params *advertisement.AdvertisementListParams) (*[]advertisement.AdvertisementList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAd", ctx, params)
	ret0, _ := ret[0].(*[]advertisement.AdvertisementList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAd indicates an expected call of ListAd.
func (mr *MockServiceInterfaceMockRecorder) ListAd(ctx, params any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAd", reflect.TypeOf((*MockServiceInterface)(nil).ListAd), ctx, params)
}
